names(cue2) <- c("plonepath", "ID")
names(fullAnswerData)
fullAnswerData%>%dplyr::select(plonePath, qName)->miniA
miniA <- as.data.frame(miniA)
summary(miniA)
cue1$cue <- "1"
cue2$cue <- "1"
## Taka til í báðum cue listum.
cue1$plonepath <- gsub(cue1$plonepath, pattern=".cue$", replacement="")
cue2$ID <- gsub(cue2$ID, pattern=".cue$", replacement="")
cue2$plonepath <- gsub(cue2$plonepath, pattern="cue.tex:%ID$", replacement="")
## Taka út tvær línur sem eru greinilega bull
cue2 <- filter(cue2, !ID == "matches")
cue2 <- filter(cue2, !plonepath == "Binary")
plone <- cue2%>%pull(ID)
tenging <- miniA[grep(paste(plone,collapse = "|"),miniA$qName),]
teng <- miniA[unique(grep(paste(plone, collapse="|"), miniA$qName)),]
data <- filter(miniA, grepl(paste(plone,collapse = "|"),miniA$qName))
knitr::opts_chunk$set(echo = TRUE)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(compare)
library(ggplot2)
library(rvest)
library(dplyr)
library(knitr)
library(tidyverse)
library(gridExtra)
library(kableExtra)
library(xtable)
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "ilb8", password = "AIAtKDEMe2S0I")
answer <- tbl(twDb, "answer")
lecture<-tbl(twDb,"lecture")
question<-tbl(twDb,"question")
host<-tbl(twDb,"host")
coinAward<-tbl(twDb,"coinAward")
lectureGlobalSetting<-tbl(twDb,"lectureGlobalSetting")
lectureQuestions<-tbl(twDb,"lectureQuestions")
lectureSetting<-tbl(twDb,"lectureSetting")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
subscription<-as.data.frame(tbl(twDb,"subscription"))
lectureStudentSetting%>%group_by(key)%>%summarise(stdev=sd(value,na.rm=T),stdevlog=sd(log2(value),na.rm=T))->stdevs
hash<-read.csv("bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
pathQ<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hash$plonePath<-paste(hash$dir,hash$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
myAnswer<-as.data.frame(myAnswer)
inner_join(myAnswer,hash) -> fullAnswerData
fullAnswerData <- as.data.frame(fullAnswerData)
## Kóðinn á bakvið cue1. Villa á select.
##fullAnswerData %>%
##collect() %>%
##filter(grepl("cue", plonePath)) %>%
##select(plonePath) -> tmp
## töflurnar með vísbendingunum, benda í plonepath
cue1 <- read.table("cue_all.txt")
cue2 <- read.table("cuelist.txt")
glimpse(cue1)
glimpse(cue2)
anyDuplicated(cue1)
summary(cue2)
anyDuplicated(cue2$V1)
anyDuplicated(cue2$V2)
names(cue1) <- c("plonepath")
names(cue2) <- c("plonepath", "ID")
names(fullAnswerData)
fullAnswerData%>%dplyr::select(plonePath, qName)->miniA
miniA <- as.data.frame(miniA)
summary(miniA)
cue1$cue <- "1"
cue2$cue <- "1"
## Taka til í báðum cue listum.
cue1$plonepath <- gsub(cue1$plonepath, pattern=".cue$", replacement="")
cue2$ID <- gsub(cue2$ID, pattern=".cue$", replacement="")
cue2$plonepath <- gsub(cue2$plonepath, pattern="cue.tex:%ID$", replacement="")
## Taka út tvær línur sem eru greinilega bull
cue2 <- filter(cue2, !ID == "matches")
cue2 <- filter(cue2, !plonepath == "Binary")
plone <- cue2%>%pull(ID)
tenging <- miniA[grep(paste(plone,collapse = "|"),miniA$qName),]
teng <- miniA[unique(grep(paste(plone, collapse="|"), miniA$qName)),]
data <- filter(miniA, grepl(paste(plone,collapse = "|"),miniA$qName))
Kóðinn á bakvið cue1. Villa á select.
#Kóðinn á bakvið cue1. Villa á select.
#fullAnswerData %>%
# collect() %>%
#filter(grepl("cue", plonePath)) %>%
#select(plonePath) -> tmp
tbl(twDb,"question") %>%
collect() %>%
filter(grepl("cue", plonePath)) %>%
select(plonePath) -> tmp
tbl(twDb,"question") %>%
collect() %>%
filter(grepl("cue", plonePath)) %>%
select(plonePath)
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath))%>%select(plonePath)
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath))%>%select(question,plonePath)
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath)) <- dat
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath)) -> dat
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath)) -> dat
View(dat)
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath)) -> cue
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath)) -> cue
left_join(cue$questionId,as.data.frame(fullAnswerData))->virkar
cue$questionId <- as.factor(cue$questionId)
left_join(cue$questionId,as.data.frame(fullAnswerData))->virkar
knitr::opts_chunk$set(echo = TRUE)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(compare)
library(ggplot2)
library(rvest)
library(dplyr)
library(knitr)
library(tidyverse)
library(gridExtra)
library(kableExtra)
library(xtable)
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "ilb8", password = "AIAtKDEMe2S0I")
answer <- tbl(twDb, "answer")
lecture<-tbl(twDb,"lecture")
question<-tbl(twDb,"question")
host<-tbl(twDb,"host")
coinAward<-tbl(twDb,"coinAward")
lectureGlobalSetting<-tbl(twDb,"lectureGlobalSetting")
lectureQuestions<-tbl(twDb,"lectureQuestions")
lectureSetting<-tbl(twDb,"lectureSetting")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
subscription<-as.data.frame(tbl(twDb,"subscription"))
lectureStudentSetting%>%group_by(key)%>%summarise(stdev=sd(value,na.rm=T),stdevlog=sd(log2(value),na.rm=T))->stdevs
hash<-read.csv("bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
pathQ<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hash$plonePath<-paste(hash$dir,hash$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
myAnswer<-as.data.frame(myAnswer)
inner_join(myAnswer,hash) -> fullAnswerData
fullAnswerData <- as.data.frame(fullAnswerData)
#Kóðinn á bakvið cue1. Villa á select.
#fullAnswerData %>%
# collect() %>%
#filter(grepl("cue", plonePath)) %>%
#select(plonePath) -> tmp
## töflurnar með vísbendingunum, benda í plonepath
cue1 <- read.table("cue_all.txt")
cue2 <- read.table("cuelist.txt")
glimpse(cue1)
glimpse(cue2)
anyDuplicated(cue1)
summary(cue2)
anyDuplicated(cue2$V1)
anyDuplicated(cue2$V2)
names(cue1) <- c("plonepath")
names(cue2) <- c("plonepath", "ID")
names(fullAnswerData)
fullAnswerData%>%dplyr::select(plonePath, qName)->miniA
miniA <- as.data.frame(miniA)
summary(miniA)
cue1$cue <- "1"
cue2$cue <- "1"
## Taka til í báðum cue listum.
cue1$plonepath <- gsub(cue1$plonepath, pattern=".cue$", replacement="")
cue2$ID <- gsub(cue2$ID, pattern=".cue$", replacement="")
cue2$plonepath <- gsub(cue2$plonepath, pattern="cue.tex:%ID$", replacement="")
## Taka út tvær línur sem eru greinilega bull
cue2 <- filter(cue2, !ID == "matches")
cue2 <- filter(cue2, !plonepath == "Binary")
plone <- cue2%>%pull(ID)
tenging <- miniA[grep(paste(plone,collapse = "|"),miniA$qName),]
teng <- miniA[unique(grep(paste(plone, collapse="|"), miniA$qName)),]
data <- filter(miniA, grepl(paste(plone,collapse = "|"),miniA$qName))
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath)) -> cue
left_join(cue$questionId,as.data.frame(fullAnswerData))->virkar
left_join(cue,fullAnswerData)->virkar
View(virkar)
knitr::opts_chunk$set(echo = TRUE)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(compare)
library(ggplot2)
library(rvest)
library(dplyr)
library(knitr)
library(tidyverse)
library(gridExtra)
library(kableExtra)
library(xtable)
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "ilb8", password = "AIAtKDEMe2S0I")
knitr::opts_chunk$set(echo = TRUE)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(compare)
library(ggplot2)
library(rvest)
library(dplyr)
library(knitr)
library(tidyverse)
library(gridExtra)
library(kableExtra)
library(xtable)
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "ilb8", password = "AIAtKDEMe2S0I")
answer <- tbl(twDb, "answer")
lecture<-tbl(twDb,"lecture")
question<-tbl(twDb,"question")
host<-tbl(twDb,"host")
coinAward<-tbl(twDb,"coinAward")
lectureGlobalSetting<-tbl(twDb,"lectureGlobalSetting")
lectureQuestions<-tbl(twDb,"lectureQuestions")
lectureSetting<-tbl(twDb,"lectureSetting")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
subscription<-as.data.frame(tbl(twDb,"subscription"))
lectureStudentSetting%>%group_by(key)%>%summarise(stdev=sd(value,na.rm=T),stdevlog=sd(log2(value),na.rm=T))->stdevs
hash<-read.csv("bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
pathQ<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hash$plonePath<-paste(hash$dir,hash$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
myAnswer<-as.data.frame(myAnswer)
inner_join(myAnswer,hash) -> fullAnswerData
fullAnswerData <- as.data.frame(fullAnswerData)
#Kóðinn á bakvið cue1. Villa á select.
#fullAnswerData %>%
# collect() %>%
#filter(grepl("cue", plonePath)) %>%
#select(plonePath) -> tmp
## töflurnar með vísbendingunum, benda í plonepath
cue1 <- read.table("cue_all.txt")
cue2 <- read.table("cuelist.txt")
glimpse(cue1)
glimpse(cue2)
anyDuplicated(cue1)
summary(cue2)
anyDuplicated(cue2$V1)
anyDuplicated(cue2$V2)
names(cue1) <- c("plonepath")
names(cue2) <- c("plonepath", "ID")
names(fullAnswerData)
fullAnswerData%>%dplyr::select(plonePath, qName)->miniA
miniA <- as.data.frame(miniA)
summary(miniA)
cue1$cue <- "1"
cue2$cue <- "1"
## Taka til í báðum cue listum.
cue1$plonepath <- gsub(cue1$plonepath, pattern=".cue$", replacement="")
cue2$ID <- gsub(cue2$ID, pattern=".cue$", replacement="")
cue2$plonepath <- gsub(cue2$plonepath, pattern="cue.tex:%ID$", replacement="")
## Taka út tvær línur sem eru greinilega bull
cue2 <- filter(cue2, !ID == "matches")
cue2 <- filter(cue2, !plonepath == "Binary")
plone <- cue2%>%pull(ID)
tenging <- miniA[grep(paste(plone,collapse = "|"),miniA$qName),]
teng <- miniA[unique(grep(paste(plone, collapse="|"), miniA$qName)),]
data <- filter(miniA, grepl(paste(plone,collapse = "|"),miniA$qName))
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath)) -> cue
left_join(cue,fullAnswerData)->virkar
knitr::opts_chunk$set(echo = TRUE)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(compare)
library(ggplot2)
library(rvest)
library(dplyr)
library(knitr)
library(tidyverse)
library(gridExtra)
library(kableExtra)
library(xtable)
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "ilb8", password = "AIAtKDEMe2S0I")
answer <- tbl(twDb, "answer")
lecture<-tbl(twDb,"lecture")
question<-tbl(twDb,"question")
host<-tbl(twDb,"host")
coinAward<-tbl(twDb,"coinAward")
lectureGlobalSetting<-tbl(twDb,"lectureGlobalSetting")
lectureQuestions<-tbl(twDb,"lectureQuestions")
lectureSetting<-tbl(twDb,"lectureSetting")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
subscription<-as.data.frame(tbl(twDb,"subscription"))
lectureStudentSetting%>%group_by(key)%>%summarise(stdev=sd(value,na.rm=T),stdevlog=sd(log2(value),na.rm=T))->stdevs
hash<-read.csv("bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
pathQ<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hash$plonePath<-paste(hash$dir,hash$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
myAnswer<-as.data.frame(myAnswer)
inner_join(myAnswer,hash) -> fullAnswerData
fullAnswerData <- as.data.frame(fullAnswerData)
#Kóðinn á bakvið cue1. Villa á select.
#fullAnswerData %>%
# collect() %>%
#filter(grepl("cue", plonePath)) %>%
#select(plonePath) -> tmp
## töflurnar með vísbendingunum, benda í plonepath
cue1 <- read.table("cue_all.txt")
cue2 <- read.table("cuelist.txt")
glimpse(cue1)
glimpse(cue2)
anyDuplicated(cue1)
summary(cue2)
anyDuplicated(cue2$V1)
anyDuplicated(cue2$V2)
names(cue1) <- c("plonepath")
names(cue2) <- c("plonepath", "ID")
names(fullAnswerData)
fullAnswerData%>%dplyr::select(plonePath, qName)->miniA
miniA <- as.data.frame(miniA)
summary(miniA)
cue1$cue <- "1"
cue2$cue <- "1"
## Taka til í báðum cue listum.
cue1$plonepath <- gsub(cue1$plonepath, pattern=".cue$", replacement="")
cue2$ID <- gsub(cue2$ID, pattern=".cue$", replacement="")
cue2$plonepath <- gsub(cue2$plonepath, pattern="cue.tex:%ID$", replacement="")
## Taka út tvær línur sem eru greinilega bull
cue2 <- filter(cue2, !ID == "matches")
cue2 <- filter(cue2, !plonepath == "Binary")
plone <- cue2%>%pull(ID)
tenging <- miniA[grep(paste(plone,collapse = "|"),miniA$qName),]
teng <- miniA[unique(grep(paste(plone, collapse="|"), miniA$qName)),]
data <- filter(miniA, grepl(paste(plone,collapse = "|"),miniA$qName))
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath)) -> cue
left_join(cue,fullAnswerData)->virkar
View(cue)
knitr::opts_chunk$set(echo = TRUE)
library(dbplyr)
library(dplyr)
library(RMySQL)
library(tidyr)
library(MASS)
library(compare)
library(ggplot2)
library(rvest)
library(dplyr)
library(knitr)
library(tidyverse)
library(gridExtra)
library(kableExtra)
library(xtable)
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "ilb8", password = "AIAtKDEMe2S0I")
answer <- tbl(twDb, "answer")
lecture<-tbl(twDb,"lecture")
question<-tbl(twDb,"question")
host<-tbl(twDb,"host")
coinAward<-tbl(twDb,"coinAward")
lectureGlobalSetting<-tbl(twDb,"lectureGlobalSetting")
lectureQuestions<-tbl(twDb,"lectureQuestions")
lectureSetting<-tbl(twDb,"lectureSetting")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
subscription<-as.data.frame(tbl(twDb,"subscription"))
lectureStudentSetting%>%group_by(key)%>%summarise(stdev=sd(value,na.rm=T),stdevlog=sd(log2(value),na.rm=T))->stdevs
hash<-read.csv("bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
pathQ<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hash$plonePath<-paste(hash$dir,hash$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
myAnswer<-as.data.frame(myAnswer)
inner_join(myAnswer,hash) -> fullAnswerData
fullAnswerData <- as.data.frame(fullAnswerData)
#Kóðinn á bakvið cue1. Villa á select.
#fullAnswerData %>%
# collect() %>%
#filter(grepl("cue", plonePath)) %>%
#select(plonePath) -> tmp
## töflurnar með vísbendingunum, benda í plonepath
cue1 <- read.table("cue_all.txt")
cue2 <- read.table("cuelist.txt")
glimpse(cue1)
glimpse(cue2)
anyDuplicated(cue1)
summary(cue2)
anyDuplicated(cue2$V1)
anyDuplicated(cue2$V2)
names(cue1) <- c("plonepath")
names(cue2) <- c("plonepath", "ID")
names(fullAnswerData)
fullAnswerData%>%dplyr::select(plonePath, qName)->miniA
miniA <- as.data.frame(miniA)
summary(miniA)
cue1$cue <- "1"
cue2$cue <- "1"
## Taka til í báðum cue listum.
cue1$plonepath <- gsub(cue1$plonepath, pattern=".cue$", replacement="")
cue2$ID <- gsub(cue2$ID, pattern=".cue$", replacement="")
cue2$plonepath <- gsub(cue2$plonepath, pattern="cue.tex:%ID$", replacement="")
## Taka út tvær línur sem eru greinilega bull
cue2 <- filter(cue2, !ID == "matches")
cue2 <- filter(cue2, !plonepath == "Binary")
plone <- cue2%>%pull(ID)
tenging <- miniA[grep(paste(plone,collapse = "|"),miniA$qName),]
teng <- miniA[unique(grep(paste(plone, collapse="|"), miniA$qName)),]
data <- filter(miniA, grepl(paste(plone,collapse = "|"),miniA$qName))
tbl(twDb,"question")%>%collect()%>%filter(grepl("cue", plonePath)) -> cue
left_join(cue,fullAnswerData)->virkar
ID <- cue%>%pull(cue$questionId)
ID <- cue%>%pull(questionId)
left_join(cue,fullAnswerData)->virkar
inner_join(cue, fullAnswerData) -> kannski
left_join(cue,fullAnswerData)->virkar
inner_join(cue, fullAnswerData, by="questionId") -> kannski
View(kannski)
left_join(cue,fullAnswerData)->virkar
inner_join(cue, fullAnswerData, by="questionId") -> kannski
View(kannski)
ID <- cue%>%pull(IDquestionId)
ID <- cue%>%pull(questionId)
ID <- cue%>%pull(questionId)
ID <- cue%>%pull(questionId)
ID <- cue%>%pull(questionId)
ID <- cue%>%pull(questionId)
ID <- cue%>%pull(questionId)
ID <- cue%>%pull(questionId)
#Kóðinn á bakvið cue1. Villa á select.
fullAnswerData %>%
collect() %>%
filter(grepl("cue", plonePath)) %>%
select(plonePath) -> tmp
fullAnswerData
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "ilb8", password = "AIAtKDEMe2S0I")
answer <- tbl(twDb, "answer")
lecture<-tbl(twDb,"lecture")
question<-tbl(twDb,"question")
host<-tbl(twDb,"host")
coinAward<-tbl(twDb,"coinAward")
lectureGlobalSetting<-tbl(twDb,"lectureGlobalSetting")
lectureQuestions<-tbl(twDb,"lectureQuestions")
lectureSetting<-tbl(twDb,"lectureSetting")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
subscription<-as.data.frame(tbl(twDb,"subscription"))
lectureStudentSetting%>%group_by(key)%>%summarise(stdev=sd(value,na.rm=T),stdevlog=sd(log2(value),na.rm=T))->stdevs
hash<-read.csv("bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
pathQ<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hash$plonePath<-paste(hash$dir,hash$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
myAnswer<-as.data.frame(myAnswer)
inner_join(myAnswer,hash) -> fullAnswerData
fullAnswerData <- as.data.frame(fullAnswerData)
#Kóðinn á bakvið cue1. Villa á select.
fullAnswerData %>%
collect() %>%
filter(grepl("cue", plonePath)) %>%
select(plonePath) -> tmp
fullAnswerData
answer
twDb<-src_mysql("tw_quizdb", host = "127.0.0.1", port = 3306, user = "ilb8", password = "AIAtKDEMe2S0I")
answer <- tbl(twDb, "answer")
lecture<-tbl(twDb,"lecture")
question<-tbl(twDb,"question")
host<-tbl(twDb,"host")
coinAward<-tbl(twDb,"coinAward")
lectureGlobalSetting<-tbl(twDb,"lectureGlobalSetting")
lectureQuestions<-tbl(twDb,"lectureQuestions")
lectureSetting<-tbl(twDb,"lectureSetting")
lectureStudentSetting<-tbl(twDb,"lectureStudentSetting")
subscription<-as.data.frame(tbl(twDb,"subscription"))
lectureStudentSetting%>%group_by(key)%>%summarise(stdev=sd(value,na.rm=T),stdevlog=sd(log2(value),na.rm=T))->stdevs
hash<-read.csv("bighashfile.wide.txt",sep=" ",col.names = c("dir","qName","hash","hash2","hash3","numQ","notaType"),na.strings = ".")
pathQ<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-unique(paste(hash$dir,hash$qName,sep=""))
plonePath<-as.data.frame(plonePath)
hash$plonePath<-paste(hash$dir,hash$qName,sep="")
left_join(plonePath,as.data.frame(question))->myQuestions
answer%>%filter(timeStart>"2020-01-01 00:01:01")->answerRed
answerRed<-as.data.frame(answerRed)
inner_join(answerRed,myQuestions) -> myAnswer
myAnswer<-as.data.frame(myAnswer)
inner_join(myAnswer,hash) -> fullAnswerData
fullAnswerData <- as.data.frame(fullAnswerData)
fullAnswerData
fullAnswerData %>%
collect()
